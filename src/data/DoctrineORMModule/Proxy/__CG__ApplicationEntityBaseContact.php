<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity\Base;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Contact extends \Application\Entity\Base\Contact implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'createdTs', 'updatedTs', 'firstName', 'lastName', 'organizationName', 'webVisibleDefault', 'phone', 'email', 'websiteUrl', 'address', 'city', 'state', 'zip', 'programContacts', 'id');
        }

        return array('__isInitialized__', 'createdTs', 'updatedTs', 'firstName', 'lastName', 'organizationName', 'webVisibleDefault', 'phone', 'email', 'websiteUrl', 'address', 'city', 'state', 'zip', 'programContacts', 'id');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Contact $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedTs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedTs', array());

        return parent::getCreatedTs();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedTs($createdTs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedTs', array($createdTs));

        return parent::setCreatedTs($createdTs);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationName', array());

        return parent::getOrganizationName();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationName($organizationName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationName', array($organizationName));

        return parent::setOrganizationName($organizationName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState(\Application\Entity\Base\StateInterface $state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedTs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedTs', array());

        return parent::getUpdatedTs();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedTs($updatedTs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedTs', array($updatedTs));

        return parent::setUpdatedTs($updatedTs);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsiteUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsiteUrl', array());

        return parent::getWebsiteUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsiteUrl($websiteUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsiteUrl', array($websiteUrl));

        return parent::setWebsiteUrl($websiteUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getZip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZip', array());

        return parent::getZip();
    }

    /**
     * {@inheritDoc}
     */
    public function setZip($zip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZip', array($zip));

        return parent::setZip($zip);
    }

    /**
     * {@inheritDoc}
     */
    public function isWebVisibleDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isWebVisibleDefault', array());

        return parent::isWebVisibleDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebVisibleDefault($webVisibleDefault = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebVisibleDefault', array($webVisibleDefault));

        return parent::setWebVisibleDefault($webVisibleDefault);
    }

    /**
     * {@inheritDoc}
     */
    public function addProgramContact(\Application\Entity\Base\Program\ContactInterface $program)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProgramContact', array($program));

        return parent::addProgramContact($program);
    }

    /**
     * {@inheritDoc}
     */
    public function hasProgramContact(\Application\Entity\Base\Program\ContactInterface $program)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasProgramContact', array($program));

        return parent::hasProgramContact($program);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProgramContact(\Application\Entity\Base\Program\ContactInterface $program)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProgramContact', array($program));

        return parent::removeProgramContact($program);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgramContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgramContacts', array());

        return parent::getProgramContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function countProgramContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countProgramContacts', array());

        return parent::countProgramContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function clearProgramContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearProgramContacts', array());

        return parent::clearProgramContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function flatten()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'flatten', array());

        return parent::flatten();
    }

    /**
     * {@inheritDoc}
     */
    public function addSelfTo(\Doctrine\Common\Collections\Collection $collection, $allowDuplicates = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSelfTo', array($collection, $allowDuplicates));

        return parent::addSelfTo($collection, $allowDuplicates);
    }

    /**
     * {@inheritDoc}
     */
    public function id()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'id', array());

        return parent::id();
    }

    /**
     * {@inheritDoc}
     */
    public function isNull()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNull', array());

        return parent::isNull();
    }

    /**
     * {@inheritDoc}
     */
    public function flatCollection($collection, $extended = false, $indexById = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'flatCollection', array($collection, $extended, $indexById));

        return parent::flatCollection($collection, $extended, $indexById);
    }

    /**
     * {@inheritDoc}
     */
    public function asDoctrineProperty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'asDoctrineProperty', array());

        return parent::asDoctrineProperty();
    }

    /**
     * {@inheritDoc}
     */
    public function nullGet(\FzyCommon\Entity\BaseInterface $entity = NULL, \FzyCommon\Entity\BaseNull $nullObject = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'nullGet', array($entity, $nullObject));

        return parent::nullGet($entity, $nullObject);
    }

    /**
     * {@inheritDoc}
     */
    public function tsSet($ts, $createIfEmpty = true, $timezone = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tsSet', array($ts, $createIfEmpty, $timezone));

        return parent::tsSet($ts, $createIfEmpty, $timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function tsGet(\DateTime $tsProperty = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tsGet', array($tsProperty));

        return parent::tsGet($tsProperty);
    }

    /**
     * {@inheritDoc}
     */
    public function tsGetFormatted(\DateTime $tsProperty = NULL, $format = 'Y-m-d', $timezone = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tsGetFormatted', array($tsProperty, $format, $timezone));

        return parent::tsGetFormatted($tsProperty, $format, $timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormTag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormTag', array());

        return parent::getFormTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormTag($tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormTag', array($tag));

        return parent::setFormTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', array());

        return parent::jsonSerialize();
    }

}
