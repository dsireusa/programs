<?php

namespace Application\Service\Update;

use FzyCommon\Util\Params;

/**
 * Class Authority.
 */
class Authority extends Base
{
    const MAIN_TAG = 'authority';

    const MAIN_ENTITY_CLASS = 'Application\Entity\Base\Program\Authority';

    const MAIN_ENTITY_ID_PARAM = 'authorityId';

    protected function setUpFormDataEventListeners()
    {
        $this->formDataEvent(static::MAIN_TAG, array($this, 'handleAuthorityFormData'));
    }

    protected function beforeFormGeneration(array $entities)
    {
        /* @var $authority \Application\Entity\Base\Program\Authority */
        $authority = $entities[static::MAIN_TAG];
        $authority->setFormTag($authority->getFormTag()."'+(".'$index || 0'.")+'");

        return parent::beforeFormGeneration($entities);
    }

    /**
     * @param Params $params
     *
     * @return Params
     *
     * @throws \Application\Exception\Service\Update\FailedTimeConversion
     */
    protected function handleAuthorityFormData(Params $params)
    {
        $this->formatDateData($params, 'effectiveDate')
            ->formatDateData($params, 'enactedDate')
            ->formatDateData($params, 'expiredDate');

        return $params;
    }

    protected function postValidate($valid, Params $params, $options = array())
    {
        /* @var $authority \Application\Entity\Base\Program\Authority */
        $authority = $this->entity();
        if ($valid) {
            if ($params->getWrapped('upload')->has('key')) {
                $authority->setFile($params->getWrapped('upload')->get('key'));
            }
            if ($params->getWrapped('upload')->has('fileName')) {
                $authority->setFileName($params->getWrapped('upload')->get('fileName'));
            }
        }
        parent::postValidate($valid, $params); // TODO: Change the autogenerated stub
    }
}
